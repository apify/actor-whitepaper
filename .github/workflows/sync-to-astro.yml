name: Sync Whitepaper to Astro (PR flow)

# Triggers on push to main when MD files or related assets change.
on:
  push:
    branches:
      - main
      - feat/gh-57-content-sync
    paths:
      - '*.md'
      - 'pages/**/*.md'
      - '.github/workflows/sync-to-astro.yml'
      - 'scripts/**/*.py'
  workflow_dispatch:  # also allows manual trigger from GitHub UI

env:
  TARGET_REPO: "apify/actor-whitepaper-web"
  TARGET_BRANCH: "sync/whitepaper-updates"

jobs:
  sync:
    name: Sync Whitepaper to Astro (PR flow)
    runs-on: ubuntu-latest
    permissions:
      contents: write      # needed for pushing changes
      pull-requests: write # needed for creating PRs

    steps:
      # Step 1: Clone the source repo (this repo) into ./source directory.
      - name: Checkout source repo
        uses: actions/checkout@v4
        with:
          path: source

      # Step 2: Clone the target repo (Astro site) into ./target directory
      - name: Checkout target repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.TARGET_REPO }}
          path: target
          token: ${{ secrets.APIFY_SERVICE_ACCOUNT_GITHUB_TOKEN }}

      # Step 3: Setup Python environment.
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: source/requirements.txt

      # Step 4: Install dependencies.
      - name: Install dependencies
        run: |
          cd source
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      # Step 5: Run the MD to MDX conversion script.
      - name: Run sync script
        run: |
          python source/scripts/md2mdx.py

      # Debug: Check target repo structure
      - name: Debug target repo
        run: |
          echo "Target repo contents:"
          ls -la target/
          echo "\nTarget src contents:"
          ls -la target/src || echo "No src directory!"
          echo "\nTarget content directory (if exists):"
          ls -la target/src/content || echo "No content directory!"
          echo "\nPages content directory (if exists):"
          ls -la target/src/content/pages || echo "No content directory!"
          echo "\nGit status of target:"
          cd target && git status
          pwd

      # Step 6: Create or update PR with changes.
      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.APIFY_SERVICE_ACCOUNT_GITHUB_TOKEN }}
        run: |
          cd target
          
          # Debug: Show current directory and its contents
          echo "Current directory: $(pwd)"
          echo "Directory contents:"
          ls -la
          
          # Debug: Show git status in detail
          echo "Git status:"
          git status
          
          # Debug: Show any differences
          echo "Git diff:"
          git diff
          
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Create new branch (with error handling).
          git checkout -b ${{ env.TARGET_BRANCH }} || git checkout ${{ env.TARGET_BRANCH }}
          
          # Debug: Show branch status
          echo "Current branch:"
          git branch --show-current
          
          # Only create PR if there are changes.
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "Changes detected:"
            git status --porcelain
            
            git add .
            git commit -m "sync: Update MDX content from whitepaper"

            # Add error handling for push.
            if ! git push -f origin ${{ env.TARGET_BRANCH }}; then
              echo "Failed to push changes"
              exit 1
            fi

            # Create or update PR with labels and assignee.
            PR_TITLE="sync: Update MDX content from whitepaper"
            PR_BODY="Automated sync of whitepaper content to MDX format.

            This PR was automatically generated by the sync workflow.

            - [ ] Review content changes
            - [ ] Check MDX formatting"

            if gh pr view ${{ env.TARGET_BRANCH }} &>/dev/null; then
              gh pr edit ${{ env.TARGET_BRANCH }} \
                --title "${PR_TITLE}" \
                --body "${PR_BODY}" \
                --add-label "automated,sync" \
                --add-assignee "${{ github.actor }}"
            else
              gh pr create \
                --title "${PR_TITLE}" \
                --body "${PR_BODY}" \
                --base main \
                --head ${{ env.TARGET_BRANCH }} \
                --label "automated,sync" \
                --assignee "${{ github.actor }}"
            fi
          else
            echo "No changes detected in git status --porcelain"
            echo "Full directory contents of target/src/content/pages:"
            ls -la target/src/content/pages/
          fi
